version: '3.7'

x-container-common: &container-common
  restart: ${CONTAINER_RESTART-on-failure}
  networks:
    - orchestrate

x-postgres-common: &postgres-common
  environment:
    POSTGRES_PASSWORD: postgres

services:
  zookeeper:
    <<: *container-common
    image: confluentinc/cp-zookeeper:5.3.0
    ports:
      - ${ZOOKEEPER_EXTERNAL_PORT-2181}:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_CLIENT_PORT-32181}
      ZOOKEEPER_TICK_TIME: ${ZOOKEEPER_TICK_TIME-2000}

  kafka:
    <<: *container-common
    image: confluentinc/cp-kafka:5.3.0
    depends_on:
      - zookeeper
    ports:
      - ${KAFKA_EXTERNAL_PORT-9092}:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:${ZOOKEEPER_CLIENT_PORT-32181}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://${KAFKA_EXTERNAL_HOSTNAME-localhost}:${KAFKA_EXTERNAL_PORT-9092}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL

  redis:
    <<: *container-common
    image: redis:5.0-alpine
    command: redis-server /usr/local/etc/redis/redis.conf
    ports:
      - 6379:6379
    volumes:
      - ./config/redis/redis.conf:/usr/local/etc/redis/redis.conf

  postgres-contract-registry:
    <<: *container-common
    <<: *postgres-common
    image: postgres:10.12-alpine
    ports:
      - 5432
    volumes:
      - db-data-contract-registry:/var/lib/postgresql/data

  postgres-transaction-scheduler:
    <<: *container-common
    <<: *postgres-common
    image: postgres:10.12-alpine
    volumes:
      - db-data-transaction-scheduler:/var/lib/postgresql/data
    ports:
      - 5432

  postgres-chain-registry:
    <<: *container-common
    <<: *postgres-common
    image: postgres:10.12-alpine
    volumes:
      - db-data-chain-registry:/var/lib/postgresql/data
    ports:
      - 5432
      
  vault:
    <<: *container-common
    image: library/vault:1.1.1
    tty: true
    cap_add:
      - IPC_LOCK
    ports:
      - 9999:8200
    volumes:
      - ./config/hashicorp/config.hcl:/vault/config.hcl:ro
    entrypoint: vault server -config=/vault

  vault-init:
    <<: *container-common
    # image: library/vault:1.1.1
    build: ./config/hashicorp
    environment:
      VAULT_ADDR: ${VAULT_ADDR-http://vault:8200}
    restart: 'no'
    depends_on:
      - vault
    volumes:
      - vault-token:/vault/token
      - ./config/hashicorp/init.sh:/init.sh
    command: sh /init.sh

volumes:
  db-data-contract-registry:
    driver: local
  db-data-transaction-scheduler:
    driver: local
  db-data-chain-registry:
    driver: local
  chain-data:
    driver: local
  vault-token:
    driver: local

networks:
  orchestrate:
    driver: bridge
