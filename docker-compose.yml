version: '3.7'

x-default-variables: &default-variables
  CONTRACT_REGISTRY_URL: ${CONTRACT_REGISTRY_URL-contract-registry:8080}
  CHAIN_REGISTRY_URL: ${CHAIN_REGISTRY_URL-http://chain-registry:8081}
  TRANSACTION_SCHEDULER_URL: ${TRANSACTION_SCHEDULER_URL-http://transaction-scheduler:8081}
  KAFKA_URL: ${KAFKA_URL-kafka:29092}
  CHAIN_REGISTRY_INIT: ${CHAIN_REGISTRY_INIT-}
  ETH_CLIENT_RETRY_MAX_ELAPSED_TIME: 5s
  LOG_LEVEL: ${LOG_LEVEL-info}
  LOG_FORMAT: ${LOG_FORMAT-json}
  NONCE_MANAGER_TYPE: ${NONCE_MANAGER_TYPE-redis}
  REDIS_HOST: ${REDIS_HOST-redis}
  REDIS_PORT: ${REDIS_PORT-6379}
  VAULT_ADDR: ${VAULT_ADDR-http://vault:8200}
  MULTI_TENANCY_ENABLED: ${MULTI_TENANCY_ENABLED-}
  AUTH_JWT_CLAIMS_NAMESPACE: ${AUTH_JWT_CLAIMS_NAMESPACE-}
  AUTH_JWT_CERTIFICATE: ${AUTH_JWT_CERTIFICATE-}
  AUTH_JWT_PRIVATE_KEY: ${AUTH_JWT_PRIVATE_KEY-}
  AUTH_API_KEY: ${AUTH_API_KEY-}
  TX_SCHEDULER_ENABLED: ${TX_SCHEDULER_ENABLED-true}
  ENVELOPE_STORE_ENABLED: ${ENVELOPE_STORE_ENABLED-false}

x-container-common: &container-common
  restart: ${CONTAINER_RESTART-on-failure}
  image: consensys-docker-pegasys-orchestrate.bintray.io/orchestrate:v2.5.3
  networks:
    - orchestrate

x-contract-registry-common: &contract-registry-common
  CONTRACT_REGISTRY_TYPE: ${CONTRACT_REGISTRY_TYPE-}
  DB_HOST: postgres-contract-registry

x-transaction-scheduler-common: &transaction-scheduler-common
  TRANSACTION_SCHEDULER_TYPE: ${TRANSACTION_SCHEDULER_TYPE-}
  DB_HOST: postgres-transaction-scheduler

x-chain-registry-common: &chain-registry-common
  CHAIN_REGISTRY_TYPE: ${CHAIN_REGISTRY_TYPE-}
  DB_HOST: postgres-chain-registry

services:
  chain-registry-migration-init:
    <<: *container-common
    environment:
      <<: *default-variables
      <<: *chain-registry-common
    restart: 'no'
    command: chain-registry migrate init

  chain-registry-migration:
    <<: *container-common
    environment:
      <<: *default-variables
      <<: *chain-registry-common
    restart: 'no'
    depends_on:
      - chain-registry-migration-init
    command: chain-registry migrate

  chain-registry:
    <<: *container-common
    ports:
      - 8010:8080
      - 8011:8081
      - 8012:8082
    environment:
      <<: *default-variables
      <<: *chain-registry-common
      CHAIN_REGISTRY_INIT: ${CHAIN_REGISTRY_INIT-}
    depends_on:
      - chain-registry-migration
    command: chain-registry run

  contract-registry-migration-init:
    <<: *container-common
    environment:
      <<: *default-variables
      <<: *contract-registry-common
    restart: 'no'
    command: contract-registry migrate init

  contract-registry-migration:
    <<: *container-common
    environment:
      <<: *default-variables
      <<: *contract-registry-common
    restart: 'no'
    depends_on:
      - contract-registry-migration-init
    command: contract-registry migrate

  contract-registry:
    <<: *container-common
    ports:
      - 8020:8080
      - 8021:8081
      - 8022:8082
    environment:
      <<: *default-variables
      <<: *contract-registry-common
      LOG_LEVEL: trace
    depends_on:
      - contract-registry-migration
    command: contract-registry run

  transaction-scheduler-migration-init:
    <<: *container-common
    environment:
      <<: *default-variables
      <<: *transaction-scheduler-common
    restart: 'no'
    command: transaction-scheduler migrate init

  transaction-scheduler-migration:
    <<: *container-common
    environment:
      <<: *default-variables
      <<: *transaction-scheduler-common
    restart: 'no'
    depends_on:
      - transaction-scheduler-migration-init
    command: transaction-scheduler migrate up

  transaction-scheduler:
    <<: *container-common
    ports:
      - 8030:8080
      - 8031:8081
      - 8032:8082
    environment:
      <<: *default-variables
      <<: *transaction-scheduler-common
    depends_on:
      - transaction-scheduler-migration
    command: transaction-scheduler run

  tx-crafter:
    <<: *container-common
    environment:
      <<: *default-variables
      JAEGER_SERVICE_NAME: TX-CRAFTER
    depends_on:
      - contract-registry
    command: tx-crafter run

  tx-signer:
    <<: *container-common
    environment:
      <<: *default-variables
      SECRET_PKEY: ${SECRET_PKEY-}
      SECRET_STORE: ${SECRET_STORE-hashicorp}
    volumes:
      - vault-token:/vault/token:ro
    command: tx-signer run

  tx-sender:
    <<: *container-common
    environment:
      <<: *default-variables
    depends_on:
      - transaction-scheduler
    command: tx-sender run

  tx-listener:
    <<: *container-common
    environment:
      <<: *default-variables
      LISTENER_START_DEFAULT: latest
    depends_on:
      - transaction-scheduler
      - chain-registry
    command: tx-listener run

  generate-jwt:
    <<: *container-common
    environment:
      <<: *default-variables
      TENANT_ID: ${TENANT_ID-}
    command: 'utils generate-jwt --tenant=${TENANT_ID}'
    restart: 'no'

volumes:
  vault-token:
    external:
      name: deps_vault-token

networks:
  orchestrate:
    external:
      name: deps_orchestrate
